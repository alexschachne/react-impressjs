{"version":3,"sources":["../src/components/Impress.js"],"names":["html","document","documentElement","body","_lastHash","_stepsData","_activeStep","_idHelper","Impress","props","rootData","hint","hintMessage","fallbackMessage","progress","zoomIn","rootStyles","position","top","left","transformOrigin","transition","transformStyle","defaultData","x","y","z","rotateX","rotateY","rotateZ","scale","state","windowScale","config","impressSupported","activeStep","data","cameraStyles","startX","deltaX","init","goto","window","addEventListener","location","hash","nextPorps","setState","prevProps","console","log","end","home","defaults","width","height","maxScale","minScale","perspective","transitionDuration","classList","dataset","overflow","$set","$merge","step","duration","scrollTo","target","zoomin","delay","id","targetScale","transform","transitionDelay","stepsDataKeys","Object","keys","prev","findIndex","k","length","next","stepsDataEntries","entries","firstStep","lastStep","e","touches","clientX","preventDefault","index","React","cloneElement","key","idHelper","initStep","bind","children","steps","Children","map","stepComponent","stepsTotal","count","handleTouchStart","handleTouchMove","handleTouchEnd","className","Component","propTypes","PropTypes","object","bool","oneOfType","string","defaultProps"],"mappings":"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","file":"Impress.js","sourcesContent":["import React, {Component} from 'react';\nimport update             from 'react/lib/update';\nimport PropTypes          from 'prop-types';\nimport {\n  computeWindowScale,\n  css,\n  getElementFromHash,\n  perspective,\n  pfx,\n  rotate,\n  scale,\n  throttle,\n  toNumber,\n  translate,\n}                         from './util';\n\nimport Progress from './Progress';\nimport Hint     from './Hint';\n\nconst html = document.documentElement,\n      body = document.body;\n\nlet _lastHash  = '',\n    _stepsData = {},\n    _activeStep,\n    _idHelper  = 1;\n\nexport default class Impress extends Component {\n  constructor(props) {\n    super(props);\n\n    const {rootData, hint, hintMessage, fallbackMessage, progress, zoomIn} = props;\n    const rootStyles = {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transformOrigin: 'top left',\n      transition: 'all 0s ease-in-out',\n      transformStyle: 'preserve-3d',\n    };\n    const defaultData = {\n      x: 0, y: 0, z: 0,\n      rotateX: 0, rotateY: 0, rotateZ: 0,\n      scale: 1,\n    };\n\n    // <Impress /> State\n    this.state = {\n      /** Impress Config **/\n      rootStyles,\n      windowScale: null,\n      config: null,\n      impressSupported: false,\n\n      /** Step Status **/\n      activeStep: {\n        data: defaultData,\n      },\n\n      /** Camera Status **/\n      cameraStyles: rootStyles,\n\n      /** Public attributes provide to use **/\n      rootData: rootData, // (not recommended)\n      hint: hint,\n      hintMessage: hintMessage,\n      fallbackMessage: fallbackMessage,\n      progress: progress,\n      zoomIn: zoomIn,\n\n      /** For touch event **/\n      startX: 0,\n      deltaX: 0,\n    };\n  }\n\n  componentWillMount() {\n    // Init impress\n    this.init();\n  }\n\n  componentDidMount() {\n    const {impressSupported} = this.state;\n\n    // 2017/2/28 暫時想不到好方法\n    if (impressSupported)\n      this.goto(_activeStep, 500);\n\n    // Listener for keyboard event\n    // document.addEventListener('keyup', throttle((e) => {\n    //   if (e.keyCode === 9 ||\n    //       (e.keyCode >= 32 && e.keyCode <= 40)) {\n    //     switch (e.keyCode) {\n    //       case 35: // End\n    //         this.end();\n    //         break;\n    //       case 36: // Home\n    //         this.home();\n    //         break;\n    //       case 33: // Page up\n    //       case 37: // Left\n    //       case 38: // Up\n    //         this.prev();\n    //         break;\n    //       case 9:  // Tab\n    //       case 32: // Space\n    //       case 34: // Page down\n    //       case 39: // Right\n    //       case 40: // Down\n    //         this.next();\n    //         break;\n    //       default:\n    //         break;\n    //     }\n    //   }\n    // }, 250), false);\n\n    // Window resize\n    window.addEventListener('resize', throttle(() => {\n      if (impressSupported)\n        this.goto(this.state.activeStep, 500);\n    }, 250), false);\n\n    // URL hash change\n    window.addEventListener('hashchange', throttle(() => {\n      if (window.location.hash !== _lastHash)\n        this.goto(getElementFromHash(_stepsData), 500);\n    }, 250), false);\n  }\n\n  componentWillReceiveProps(nextPorps) {\n    this.setState({\n      fallbackMessage: nextPorps.fallbackMessage,\n      hint: nextPorps.hint,\n      hintMessage: nextPorps.hintMessage,\n    });\n  }\n\n  componentDidUpdate(prevProps){\n    console.log(this.props)\n    console.log(prevProps)\n\n    if (prevProps.zoomIn !== this.props.zoomIn){\n      console.log(\"true\")\n\n      if (this.props.zoomIn) {\n        this.end();\n      } else {\n        this.home();\n      }\n    }\n  }\n\n  // componentWillUnmount() {\n  //   document.removeEventListener('keydown', function(event) {\n  //     console.log(event.keyCode);\n  //   }, false);\n  // }\n\n  /**\n   * Initialize Impress.\n   */\n  init() {\n    const {rootData} = this.state;\n\n    const defaults = {\n      width: 1024,\n      height: 768,\n      maxScale: 1,\n      minScale: 0,\n      perspective: 1000,\n      transitionDuration: 1000,\n    };\n\n    // const ua = navigator.userAgent.toLowerCase()\n\n    // Check impress support or not.\n    const impressSupported =\n        // Browser should support CSS 3D transtorms\n        (pfx('perspective') !== null) &&\n        // Browser should support `classList` and `dataset` APIs\n        (body.classList) &&\n        (body.dataset);// &&\n    // But some mobile devices need to be blacklisted,\n    // because their CSS 3D support or hardware is not\n    // good enough to run impress.js properly, sorry...\n    //( ua.search( /(iphone)|(ipod)|(android)/ ) === -1 );\n\n    // Config\n    const config = {\n      width: toNumber(rootData.width, defaults.width),\n      height: toNumber(rootData.height, defaults.height),\n      maxScale: toNumber(rootData.maxScale, defaults.maxScale),\n      minScale: toNumber(rootData.minScale, defaults.minScale),\n      perspective: toNumber(rootData.perspective, defaults.perspective),\n      transitionDuration: toNumber(\n          rootData.transitionDuration, defaults.transitionDuration,\n      ),\n    };\n    // Window Scale\n    const windowScale = computeWindowScale(config);\n    // HTML height\n    css(html, {\n      height: '100vh',\n      overflow: 'hidden',\n    });\n    // Body style\n    css(body, {\n      height: '100vh',\n      overflow: 'hidden',\n\n      // mobile devise supported\n      position: 'relative',\n    });\n\n    this.setState(update(this.state, {\n      windowScale: {\n        $set: windowScale,\n      },\n      config: {\n        $set: config,\n      },\n      impressSupported: {\n        $set: impressSupported,\n      },\n      rootStyles: {\n        $merge: {\n          'transform': perspective(config.perspective / windowScale) +\n          scale(windowScale),\n        },\n      },\n    }));\n  }\n\n  /**\n   * Initialize Steps.\n   *\n   * @param {Step} step init every Steps in Impress.\n   */\n  static initStep(step) {\n    // Set first Step as enter Step.\n    if (!_activeStep)\n      _activeStep = step;\n\n    _stepsData = update(_stepsData, {\n      $merge: {\n        [step.id]: {\n          id: step.id,\n          className: step.className,\n          data: step.data,\n          duration: step.duration,\n        },\n      },\n    });\n  }\n\n  /**\n   * Navigate to the SPECIFY Step.\n   *\n   * @param {Step} step you want to navigate to.\n   * @param {number} duration 1000 speed of navigation.\n   */\n  goto(step, duration = 1000) {\n    const {config, activeStep} = this.state;\n    let {windowScale} = this.state;\n\n    window.scrollTo(0, 0);\n\n    let target = {\n      x: -step.data.x,\n      y: -step.data.y,\n      z: -step.data.z,\n      rotateX: -step.data.rotateX,\n      rotateY: -step.data.rotateY,\n      rotateZ: -step.data.rotateZ,\n      scale: 1 / step.data.scale,\n    };\n\n    // Check scale for zoom-in\n    let zoomin = target.scale >= (1 / activeStep.data.scale);\n\n    duration = toNumber(duration, config.transitionDuration);\n    let delay = (duration / 2);\n\n    if (step.id === activeStep.id)\n      windowScale = computeWindowScale(config);\n\n    const targetScale = target.scale * windowScale;\n\n    this.setState(update(this.state, {\n      activeStep: {\n        $set: step,\n      },\n      rootStyles: {\n        transform: {\n          $set: perspective(config.perspective / targetScale) +\n          scale(targetScale),\n        },\n        transitionDuration: {\n          $set: duration + 'ms',\n        },\n        transitionDelay: {\n          $set: (zoomin ? delay : 0) + 'ms',\n        },\n      },\n      cameraStyles: {\n        transform: {\n          $set: rotate(target, true) + translate(target),\n        },\n        transitionDuration: {\n          $set: duration + 'ms',\n        },\n        transitionDelay: {\n          $set: (zoomin ? 0 : delay) + 'ms',\n        },\n      },\n    }));\n\n    window.location.hash = _lastHash = '#/' + step.id;\n  }\n\n  // Navigate to the PREVIOUS Step.\n  prev() {\n    const {activeStep} = this.state;\n\n    /**\n     * 2017.04.10\n     * Why we don't use Object.entries() or Object.values() any more ?\n     * Cause the browser of iOS device (Chrome, Safari...) and some of Android devise\n     * DOES'NT supported Object.entries() and Object.values() now...\n     */\n          // const stepsDataEntries = Object.entries( _stepsData );\n          // let prev = stepsDataEntries.findIndex( ([k, v]) => { return k === activeStep.id } ) - 1;\n          // prev = prev >= 0 ? stepsDataEntries[ prev ][1] : stepsDataEntries[ stepsDataEntries.length - 1 ][1];\n\n    const stepsDataKeys = Object.keys(_stepsData);\n    // get index of previous\n    let prev = stepsDataKeys.findIndex(k => k === activeStep.id) - 1;\n\n    // get id via index from stepsData\n    prev = prev >= 0\n        ? stepsDataKeys[prev]\n        : stepsDataKeys[stepsDataKeys.length - 1];\n\n    // get previous step\n    prev = _stepsData[prev];\n\n    this.goto(prev, prev.duration);\n  }\n\n  // Navigate to the NEXT Step.\n  next() {\n    const {activeStep} = this.state;\n    const stepsDataKeys = Object.keys(_stepsData);\n    let next = stepsDataKeys.findIndex(k => k === activeStep.id) + 1;\n    next = next < stepsDataKeys.length ? stepsDataKeys[next] : stepsDataKeys[0];\n    next = _stepsData[next];\n\n    this.goto(next, next.duration);\n  }\n\n  // Navigate to the FIRST Step.\n  home() {\n    const stepsDataEntries = Object.entries(_stepsData);\n    const firstStep = stepsDataEntries[0][1];\n\n    this.goto(firstStep, firstStep.duration);\n  }\n\n  // Navigate to the LAST Step.\n  end() {\n    const stepsDataEntries = Object.entries(_stepsData);\n    const lastStep = stepsDataEntries[stepsDataEntries.length - 1][1];\n\n    this.goto(lastStep, lastStep.duration);\n  }\n\n  // Touch Start( record start position: startX )\n  handleTouchStart(e) {\n    this.setState({\n      startX: e.touches[0].clientX,\n    });\n  }\n\n  // Touch Move( Calculate touch move path: deltaX )\n  handleTouchMove(e) {\n    e.preventDefault();\n    this.setState({\n      deltaX: this.state.startX - e.touches[0].clientX,\n    });\n  }\n\n  // Touch End( decide navigate previous or next Step via 'deltaX' )\n  handleTouchEnd(e) {\n    if (this.state.deltaX > 0) // slide left\n      this.next();\n    else if (this.state.deltaX < 0) // slide right\n      this.prev();\n\n    // reset\n    this.setState({\n      deltaX: 0,\n    });\n  }\n\n  /**\n   * Create <Step />\n   *\n   * @return {Step} to render children.\n   */\n  stepComponent(step, index) {\n    const {activeStep} = this.state;\n\n    return React.cloneElement(step, {\n      key: index,\n      idHelper: step.props.id ? '' : _idHelper++,\n      activeStep: activeStep,\n      initStep: Impress.initStep.bind(this),\n      goto: this.goto.bind(this),\n    }, step.props.children);\n  }\n\n  render() {\n    const {\n            impressSupported,\n            rootStyles, cameraStyles, activeStep,\n            hint, hintMessage,\n            fallbackMessage,\n            progress,\n          } = this.state;\n    const steps = React.Children.map(this.props.children,\n        this.stepComponent.bind(this));\n    const stepsTotal = React.Children.count(this.props.children);\n\n    return (\n        <div id=\"react-impressjs\"\n             className={\n               (impressSupported\n                   ? 'impress-supported'\n                   : 'impress-not-supported') +\n               (activeStep ? ' impress-on-' + activeStep.id : '') +\n               ' impress-enabled'\n             }\n             onTouchStart={this.handleTouchStart.bind(this)}\n             onTouchMove={this.handleTouchMove.bind(this)}\n             onTouchEnd={this.handleTouchEnd.bind(this)}>\n\n          <div id=\"impress\" style={rootStyles}>\n            <div style={cameraStyles}>\n              {\n                impressSupported ? steps :\n                    <div className=\"fallback-message\">{fallbackMessage}</div>\n              }\n            </div>\n          </div>\n          <Hint\n              hint={hint}\n              stepsData={_stepsData}\n              activeStep={activeStep}\n              hintMessage={hintMessage}/>\n          <Progress\n              progress={progress}\n              stepsData={_stepsData}\n              activeStep={activeStep}\n              stepsTotal={stepsTotal}/>\n        </div>\n    );\n  }\n}\n\nImpress.propTypes = {\n  /**\n   * Impress basic config\n   */\n  rootData: PropTypes.object,\n\n  /**\n   * Whether to display hint or not\n   */\n  hint: PropTypes.bool,\n\n  /**\n   * Hint for presentation\n   */\n  hintMessage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * Fallback message is only visible when there is impress-not-supported\n   */\n  fallbackMessage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * Progress of presentation\n   */\n  progress: PropTypes.bool,\n};\n\nImpress.defaultProps = {\n  rootData: {},\n  hint: true,\n  hintMessage: <p>Use <b>Spacebar</b> or <b>Arrow keys</b> to navigate</p>,\n  fallbackMessage: <p>Your browser <b>doesn't support the features\n    required</b> by React-impressJS, so you are presented\n    with a simplified version of this presentation.</p>,\n  progress: false,\n};\n"]}